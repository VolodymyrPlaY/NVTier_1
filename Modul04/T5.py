"""
Цикл for може бути використаний для здійснення ітерацій за ключами словника, як показано нижче. На кожній ітерації ключ словника зберігається у внутрішній змінній циклу l.

lang = {"Python": 1991, "Java": 1995, "JS": 1995}
for l in lang:
    print(l)
На виході ми побачимо виведення ключів словника

Python
Java
JS
Ітеруючи за словником, ви перебираєте ключі словника. Точно таку ж поведінку можна отримати, використовуючи метод keys , але так ви явно вкажете, що хочете перебрати саме ключі:

lang = {"Python": 1991, "Java": 1995, "JS": 1995}
for l in lang.keys():
    print(l)
Циклом for також можна скористатися для здійснення ітерацій за значеннями словника. Це робиться за допомогою методу values, що створює колекцію значень словника.

У наступному прикладі ми перебираємо значення словника:

lang = {"Python": 1991, "Java": 1995, "JS": 1995}
for value in lang.values():
    print(value)
При виведенні буде:

1991
1995
1995
Якщо необхідно використовувати в циклі відразу і ключ і значення, ми використовуємо метод items

lang = {"Python": 1991, "Java": 1995, "JS": 1995}
for l, value in lang.items():
    print(f"Programming language {l} - released {value}")
При виведенні отримаємо:

Programming language Python - released 1991
Programming language Java - released 1995
Programming language JS - released 1995
У процесі роботи циклу за словником: не можна видаляти елементи зі словника, не можна додавати елементи до словника. Але можна перезаписувати значення, якщо ви ітеруєтеся за ключами.
"""
'''
Як ми знаємо, ключ у словнику має бути унікальним, тоді як значення його ні. 
Реалізуйте функцію lookup_key для пошуку всіх ключів за значенням у словнику. 
Першим параметром у функцію ми передаємо словник, а другим — значення, що хочемо знайти. 
Таким чином, результат може бути як список ключів, так і порожній список, якщо ми нічого не знайдемо.
'''
# Ось реалізація функції lookup_key, яка знаходить всі ключі за заданим значенням у словнику:


def lookup_key(data, value):
    keys_list = [key for key, val in data.items() if val == value]
    return keys_list

# Приклад використання:
my_dict = {'a': 1, 'b': 2, 'c': 1, 'd': 3, 'e': 2}
search_value = 1
result = lookup_key(my_dict, search_value)

if result:
    print(f'Keys with value {search_value}: {result}')
else:
    print(f'No keys found for value {search_value}.')
# Ця функція використовує генератор списку для створення списку ключів, значення яких співпадають з шуканим значенням. Якщо не знайдено жодного ключа, функція повертає порожній список.
    