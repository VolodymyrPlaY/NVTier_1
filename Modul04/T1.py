"""
Список — це набір елементів, які йдуть у певному порядку. Список може зберігати будь-яку інформацію: літери алфавіту, цифри або назва книг, які ви плануєте прочитати. Дані у списку не повинні бути пов'язані один з одним. Зазвичай список містить більше, ніж один елемент, і хорошим тоном вважається давати спискам імена у множині: letters, numbers, names і т.д. У Python список позначається квадратними дужками ([]), а окремі елементи списку розділяються комами. Простий приклад списку:

colors = ['red', 'green', 'blue']
Списки — це впорядковані набори даних, тому при зверненні до елемента списку необхідно вказувати індекс (позицію). Перший елемент списку завжди починається з 0. Щоб звернутися до елемента у списку, вкажіть ім'я списку за яким слідує індекс елемента у квадратних дужках.

persons = ['Jane', 'Steve', 'Moris']
print(persons[1])  # Steve
Змінити значення конкретного елемента списку можна за допомогою звичайного оператора присвоєння. При цьому ліворуч від нього має стояти ім'я змінної, у якій зберігається список, з індексом потрібного елемента у квадратних дужках, а праворуч – нове значення.

persons = ['Jane', 'Steve', 'Moris']
persons[1] = 'Niv'
print(persons)  # ['Jane', 'Niv', 'Moris']
Інструкція for дозволяє проходити по елементах списку, як і з будь-якою колекцією.

data = [4, 3, 7.5]
sum = 0
for value in data:
    sum = sum + value
print(sum)  # 14.5
Функції можуть повертати списки. Як і значення інших типів, списки з функцій повертаються за допомогою ключового слова return.
"""
'''
У нас є список показань заборгованостей з комунальних послуг наприкінці місяця. Заборгованості можуть бути від'ємними — у нас переплата, чи додатними, якщо необхідно сплатити за рахунками. Напишіть функцію amount_payment, яка приймає на вхід список платежів, підсумовує додатні значення та повертає суму платежу наприкінці місяця.
'''
# Ви можете завершити функцію amount_payment, перебираючи список платежів, сумуючи додатні значення та повертаючи загальну суму. Ось повна функція:
def amount_payment(payment):
    загальний_платіж = 0
    for сума in payment:
        if сума > 0:
            загальний_платіж += сума
    return загальний_платіж

# Приклад використання:
платежі = [100, -50, 75, -30, 120]
результат = amount_payment(платежі)
print("Загальний платіж наприкінці місяця:", результат)
# Ця функція перебирає кожен елемент у списку payment. Якщо сума є додатньою, вона додається до загальний_платіж. Наприкінці вона повертає загальну суму позитивних платежів наприкінці місяця.