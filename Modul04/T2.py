"""
Щоб додати елементи до кінця списку, необхідно використовувати метод append. Метод приймає один аргумент, який є елементом, що буде додано до кінця списку.

num = [1, 3.1415, 41, 3]
num.append(30)
print(num)  # [1, 3.1415, 41, 3, 30]
Щоб вставити новий елемент в довільне місце у списку, можна скористатися методом insert. Цей метод вимагає передачі двох параметрів, перший це індекс, за яким необхідно вставити значення, і сам елемент, що вставляється

num = [1, 3.1415, 41, 3]
num.insert(2, 30)
print(num)  # [1, 3.1415, 30, 41, 3]
Для видалення елементів зі списку можна використовувати два методи: pop та remove.

Метод pop приймає індекс елемента, що видаляється, який є необов'язковим. Якщо параметр пропустити, то буде видалено останній елемент зі списку. Метод pop також повертає видалений елемент.

num = [1, 3.1415, 41, 3]
second = num.pop(1)
print(second)  # 3.1415
print(num)  # [1, 41, 3]
Метод remove приймає єдиний параметр, але на відміну від методу pop, — це значення елемента, що видаляється. При виконанні метод remove видаляє зі списку перше знайдене входження і нічого не повертає. Якщо елемент з таким значенням не буде знайдено, станеться помилка ValueError: list.remove(x): x not in list.

num = [1, 3.1415, 41, 3]
num.remove(3.1415)
print(num)  # [1, 41, 3]
Щоб змінити порядок знаходження елементів у списку, можна скористатися методами reverse та sort. Перший з них змінює порядок елементів на зворотній, а другий сортує елементи в порядку зростання. Метод sort змінює список, якщо нам потрібно відсортувати, але отримати новий список, не змінюючи старий, треба скористатися функцією sorted

num = [1, 3.1415, 41, 3]
new_num = sorted(num)
print(new_num)  # [1, 3, 3.1415, 41]
print(num)  # [1, 3.1415, 41, 3]
"""
'''
При аналізі даних часто виникає необхідність позбавитися екстремальних значень, 
перш ніж почати працювати з даними далі. Напишіть функцію prepare_data, 
яка видаляє з переданого списку найбільше та найменше значення, 
сортує його в порядку зростання і повертає змінений список як результат.
'''
# Ось повна функція prepare_data, яка видаляє найбільше та найменше значення з переданого списку, сортує його в порядку зростання і повертає змінений список:

def prepare_data(data):
    # Перевірка, чи список не порожній
    if not data:
        return []

    # Видалення найбільшого та найменшого значення
    data.remove(max(data))
    data.remove(min(data))

    # Сортування в порядку зростання
    data.sort()

    return data

# Приклад використання:
input_data = [3, 1, 7, 2, 8, 4, 5]
result = prepare_data(input_data)
print("Підготовлений список:", result)
# Ця функція використовує вбудовані функції max, min, remove та sort для видалення найбільшого та найменшого значень і сортування списку в порядку зростання. Якщо вихідний список порожній, функція повертає порожній список.





