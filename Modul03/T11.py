'''
Однією з класичних задач на розуміння рекурсії, яку часто задають на співбесідах, 
особливо початківцям-програмістам — це ряд Фібоначчі.

Ряд Фібоначчі — це послідовність чисел виду: 0, 1, 1, 2, 3, 5, 8, ... 
де кожне наступне число послідовності виходить додаванням двох попередніх членів ряду.

У загальному вигляді для обчислення n-го члена ряду Фібоначчі слід обчислити вираз:

Fn = Fn-1 + Fn-2.

Це завдання можна вирішити рекурсивно, викликаючи функцію, що обчислює числа послідовності доти, 
доки виклик не сягне членів ряду менше n = 1, на якій задана послідовність.
'''
def fibonacci(n):
    """
    Рекурсивна функція для обчислення n-го члена ряду Фібоначчі.

    :param n: Номер члена ряду Фібоначчі (n >= 0).
    :type n: int

    :return: Значення n-го члена ряду Фібоначчі.
    :rtype: int
    """
    if n <= 1:
        return n  # Базовий випадок: F(0) = 0, F(1) = 1
    else:
        # Рекурсивний виклик для обчислення F(n-1) та F(n-2), і потім їх сума
        return fibonacci(n - 1) + fibonacci(n - 2)

# Приклад виклику функції
n_value = 6  # Заданий номер члена ряду Фібоначчі
result = fibonacci(n_value)
print(f'The {n_value}-th Fibonacci number is: {result}')
# У цій функції базовий випадок - це випадки F(0) і F(1), де результат просто повертається. В інших випадках викликається рекурсивний виклик для обчислення F(n-1) та F(n-2), і їх сума використовується для обчислення n-го члена ряду Фібоначчі. Зазначте, що цей підхід може бути неефективним для великих значень n через велику кількість зайвих обчислень, тому у реальних програмах може бути доцільно розглядати більш оптимальні методи для обчислення ряду Фібоначчі.