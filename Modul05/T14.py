"""
ЗАВДАННЯ: ПОШУК НОМЕРА ТЕЛЕФОНУ

"""
'''
Завдання буде схоже на попереднє, 
але тепер у тексті ми шукатимемо номер телефону України в міжнародному форматі, 
шаблон якого наступний: +380(67)777-7-777 або +380(67)777-77-77

Напишіть регулярний вираз для функції find_all_phones, 
яка буде в тексті (параметр text) знаходити всі телефонні номери за вказаним шаблоном та 
повертати список отриманих з тексту збігів.

З метою спрощення приймемо, що:

використовуємо тільки цифри та символи +, (, ) та -
телефонний номер починається із символу +
шаблон телефону символ + потім три цифри 380, символ (, дві цифри, символ ), 
три цифри, символ -, одна або дві цифри, символ -, дві чи три цифри
Довжина шаблону телефонного номера завжди 17 символів
Даний регулярний вираз жодною мірою не претендує на покриття всіх можливих варіантів телефонних номерів.

При виконанні цього завдання ми рекомендуємо використовувати наступний сервіс для 
перевірок регулярних виразів regex101.

STARTING CODE: 
import re


def find_all_phones(text):
    result = re.findall(r"", text)
    return result

    
Ось регулярний вираз для функції find_all_phones, 
який відповідає вказаному шаблону телефонного номера України в міжнародному форматі:

import re

def find_all_phones(text):
    # Regular expression pattern for matching Ukrainian phone numbers in international format
    phone_pattern = re.compile(r'\+\d{3}\(\d{2}\)\d{3}-\d{1,2}-\d{2,3}')

    # Find all matches in the text
    result = phone_pattern.findall(text)

    return result

# Test the function
sample_text = "Here are some phone numbers: +380(67)777-7-777, +380(67)777-77-77, +1(123)456-7890"
phones = find_all_phones(sample_text)
print(phones)
Цей регулярний вираз враховує вказаний умови та має відповідність зазначеному шаблону 
телефонного номера України в міжнародному форматі. Можете використовувати його для 
пошуку телефонних номерів у тексті.

'''
import re
def find_all_phones(text):
    pattern = re.compile(r'\+\d{3}\(?\d{2}\)?\d{3}-\d{1,2}-\d{2,3}')
    result = pattern.findall(text)
    # Обмеження на загальну довжину в 17 символів
    result = [phone[:17] for phone in result]
    return result

'''
Чому цей код працює, яка різниця:? 
import re
def find_all_phones(text):
    pattern = re.compile(r'\+\d{3}\(?\d{2}\)?\d{3}-\d{1,2}-\d{2,3}')
    result = pattern.findall(text)
    # Обмеження на загальну довжину в 17 символів
    result = [phone[:17] for phone in result]
    return result
ChatGPT
Ваш регулярний вираз r'\+\d{3}\(?\d{2}\)?\d{3}-\d{1,2}-\d{2,3}' дуже схожий на попередній, 
який я подав, і обидва працюють для вказаного формату телефонного номера. 
Основна різниця полягає в тому, що ви використовуєте ? для означення того, 
що попередній символ (в даному випадку, () може бути або відсутнім, або присутнім рівно один раз.

Окрім цього, ви додали логіку обмеження довжини телефонного номера до 17 символів:

python
Copy code
result = [phone[:17] for phone in result]
Це важливо, оскільки довжина телефонного номера завжди повинна дорівнювати 17 символам 
відповідно до вказаного формату. Такий підхід дозволяє вам обрізати будь-які знайдені 
номери телефонів до необхідної довжини.

'''