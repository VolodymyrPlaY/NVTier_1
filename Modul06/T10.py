"""
Поки що ми розглядали тільки роботу з текстовими файлами в кодуванні UTF-8. 
Це режим роботи за замовчуванням. Якщо ж потрібно працювати не з текстовими файлами, 
то можна вказати режим відкриття файлів з b, скорочено від bytes. 
У такому режимі ви отримаєте файловий дескриптор для роботи з файлом в режимі байт-рядків.

with open('raw_data.bin', 'wb') as fh:
    fh.write(b'Hello world!')
В цьому прикладі ми відкрили файл raw_data.bin у режимі для запису "сирих" даних, 
на що вказує значення wb. В цьому режимі можна писати у файл тільки байт-рядки або байт-масиви.

У режимі роботи з "сирими" даними можна відкрити та прочитати вміст будь-якого файлу, 
в тому числі і архиву.
"""
'''
Дані про користувачів краще зберігати у форматі бінарних файлів. 
Тому вам необхідно створити функцію, яка буде записувати логін та пароль користувача у файл.

Реалізуйте функцію save_credentials_users(path, users_info), 
яка зберігає інформацію про користувачів з паролями в бінарний файл.

Де:

path – шлях до файлу.
users_info - словник типу {'andry':'uyro18890D', 'steve':'oppjM13LL9e'}, 
де ключ — логін (username) користувача, а значення — його пароль (password).
Вимоги:

Кожен рядок файлу повинен мати такий вигляд username:password. 
Такий формат запису використовують при Базовій аутентифікації.
Відкрийте файл для запису та збережіть ключ та значення зі словника users_info у 
вигляді окремого рядка username:password для кожного елемента словника users_info

STARTING CODE:

def save_credentials_users(path, users_info):

       
'''
def save_credentials_users(path, users_info):
    with open(path, 'wb') as file:
        for username, password in users_info.items():
            # Формуємо рядок у форматі username:password
            credential_line = f"{username}:{password}\n"
            # Конвертуємо рядок в байти та записуємо у файл
            file.write(credential_line.encode('utf-8'))

'''
# Приклад виклику функції
users_info = {'andry': 'uyro18890D', 'steve': 'oppjM13LL9e'}
save_credentials_users('credentials.txt', users_info)
У цьому прикладі функція save_credentials_users відкриває файл для запису в бінарному режимі ('wb'). Для кожного елемента словника users_info формується рядок у форматі username:password, конвертується у байти за допомогою методу encode('utf-8') і записується у файл. Замініть значення змінних path та users_info на ваші реальні значення.
'''